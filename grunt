BEFORE INSTALLATION
	check if you have node installed:
		node -v
	check if you have npm installed:
		npm -v
INSTALLATION
	global installation (also exports the path to the grunt binary to your $PATH)
		cd no/matter/where
		sudo npm install -g grunt-cli
	check if it's there
		cd somewhere
		grunt --version
USAGE
	- folder structure will be:
		- project
			+ node_modules
			++ ...
			++ grunt
			++ ...
			- package.json
			- package-lock.json
			- Gruntfile.js
	- install grunt (to "node_modules") and add it as dependency of your project to "package.json" (file in project root directory):
		npm install grunt
	- add a file "Gruntfile.js" to your project root directory and in it configure Grunt; e.g.:
	
		create a task
			- Gruntfile.js:
				module.exports = function(grunt) {
					grunt.registerTask('helloworld', function() {
						console.log('Hello world!');
					});
				}
			- execute it on command line:
				grunt helloworld
		
		create a default task
			- Gruntfile.js:
				module.exports = function(grunt) {
					grunt.registerTask('default', function() {
						console.log('Hello world!');
					});
				}
			- execute it on command line:
				grunt
				
		create a task which runs other tasks
			- Gruntfile.js:
				module.exports = function(grunt) {
					grunt.registerTask('mybuildtask', ['hello', 'goodbye']);
					
					grunt.registerTask('hello', function() {
						console.log('Hello!');
					});
					
					grunt.registerTask('goodbye', function() {
						console.log('Goodbye!');
					});
				}
			- execute it on command line:
				grunt mybuildtask
				
		plugins (can be searched at "gruntjs.com/plugins")
			- install a plugin, e.g. "grunt-contrib-concat" for your development environment
				npm install grunt-contrib-concat --save-dev
			- Gruntfile.js:
				module.exports = function(grunt) {
					// load task
					grunt.loadNpmTasks('grunt-contrib-concat');
					// configure task
					grunt.initConfig({
						concat: {
							myActionName: {
								src: ['mypath/myfile1.js', 'mypath/f2.js', 'p4/f3.js'],
								dest: 'path/to/build/dir/myscript.js',
							},
						},
					});
				}
			- execute it on command line:
				grunt mybuildtask
			- good file structure for built files is for example:
				+ build
				-+ js
				--- vendor.min.js
				--- application.min.js
				-+ css
				--- vendor.min.css
				--- application.min.css
		module.exports = function(grunt) {
		  // Project configuration.
		  grunt.initConfig({
		    pkg: grunt.file.readJSON('package.json'),
		    uglify: {
		      options: {
			banner: '/*! <%= pkg.name %> <%= grunt.template.today("yyyy-mm-dd") %> */\n'
		      },
		      build: {
			src: 'src/<%= pkg.name %>.js',
			dest: 'build/<%= pkg.name %>.min.js'
		      }
		    }
		  });
		  // Load the plugin that provides the "uglify" task.
		  grunt.loadNpmTasks('grunt-contrib-uglify');
		  // Default task(s).
		  grunt.registerTask('default', ['uglify']);
		};
	



INS DIR WECHSELN, WO SICH Gruntfile.js BEFINDET, BEI STEINKRAFT ZB: /usr/home/username/public_html/dev.steinkraft-naturerocks.com/themes/steinkraft-theme
	grunt watch
