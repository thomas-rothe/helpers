- laravel does not use Twig as templating engine (most other Symfony based frameworks do)
- blade tags are called "directives" and are prefixed with an @
- you should not but you can use plain PHP in blade templates (using it is a sign for having logic which
	should not be contained in a view)

FILE STRUCTURE
	-+ views
	--+ emails
	---- html
	----- signup.blade.php
	---- text
	----- signup.blade.php
	--+ layouts
	---- head.blade.php
	---- header.blade.php
	---- footer.blade.php
	---- master.blade.php		or: main.blade.php, layout.blade.php, app.blade.php, site.blade.php
	---- nav.blade.php
	--+ tasks			application specific resources get an own folder each
	---+ partials			partials which are not reusable but specific for this resource
	----- thumbnail.blade.php
	---- create.blade.php
	---- destroy.blade.php
	---- edit.blade.php
	---- index.blade.php
	---- show.blade.php
	---- store.blade.php
	---- update.blade.php
	--+ partials			partials which are reusable for other applications
	---- errors.blade.php
	---- messages.blade.php
	---- thumbnail.blade.php
	--+ user
	---- profile.blade.php
	---- settings.blade.php
	--+ vendor
ECHO
	{{ $variable }}			<?php echo htmlentities($variable); ?>
	{!! $variable !!}		<?php echo $variable; ?>
	@{{ $variable }}		<?php echo '{{ $variable }}'; ?>
COMMENT
	{{-- This comment will not be in the rendered HTML --}}
CONDITIONALS
	IF
		@if ($condition)			<?php if ($condition): ?>
		@elseif ($condition)			<?php elseif ($condition): ?>
		@else					<?php else ($condition): ?>
		@endif					<?php endif; ?>
        UNLESS
		@unless	($condition)			<?php if (! $condition): ?>
		@endunless				<?php endif; ?>
        OR
		{{ $name or 'John' }}			<?php echo isset($name) ? htmlentities($name) : 'John'; ?>
	ISSET
		@isset($records)			<?php if (isset($records)): ?>
		@endisset				<?php endif; ?>
	EMPTY
		@empty($records)			<?php if (empty($records)): ?>
		@endempty				<?php endif; ?>
	SWITCH
		@switch($i)				<?php switch ($i): ?>
			@case(1)			<?php case 1: ?>
				@break			<?php break;?>
			@case(2)			<?php case 2: ?>
				@break			<?php break;?>
			@default			<?php default;?>
		@endswitch				<?php endswitch;?>
LOOPS
	FOR
		@for ($i = 0; $i < 10; $i++)
		    The current value is {{ $i }}
		@endfor
	FOREACH
		@foreach ($users as $user)
		    <p>This is user {{ $user->id }}</p>
		@endforeach
	CONTINUE - skips current iteration
		@foreach ($users as $user)
		    @continue($user->type == 1)
		    <li>{{ $user->name }}</li>
		@endforeach
	BREAK - ends the loop
		@foreach ($users as $user)
		    <li>{{ $user->name }}</li>
		    @break($user->number == 5)
		@endforeach
	FORELSE - is a @foreach that also allows you to program in a fallback if the object youâ€™re iterating over is empty.
		@forelse ($users as $user)
		    <li>{{ $user->name }}</li>
		@empty
		    <p>No users</p>
		@endforelse
	WHILE
		@while (true)
		    <p>I'm looping forever.</p>
		@endwhile
	LARAVELS LOOP OBJECT
		- not available in PHP foreach loops
		- within a @foreach or @forelse loop, this variable will return a stdClass object
		- properties:
		$loop->index		The index of the current loop iteration (starts at 0).
		$loop->iteration	The current loop iteration (starts at 1).
		$loop->remaining	The iteration remaining in the loop.
		$loop->count		The total number of items in the array being iterated.
		$loop->first		Whether this is the first iteration through the loop (boolean).
		$loop->last		Whether this is the last iteration through the loop (boolean).
		$loop->depth		The nesting level of the current loop (1  for a loop, 2  for a loop within a loop, etc.).
		$loop->parent		When in a nested loop, the parent's loop variable (as a reference; if this loop isn't within another @foreach it's null).
		- example:
		<ul>
		@foreach ($pages as $page)
			<li>{{ $loop->iteration }}: {{ $page->title }}
				@if ($page->hasChildren())
				<ul>
				@foreach ($page->children() as $child)
					<li>
						{{ $loop->parent->iteration }}.
						{{ $loop->iteration }}:
						{{ $child->title }}
					</li>
				@endforeach
				</ul>
				@endif
			</li>
		@endforeach
		</ul>
SECTIONS
	INCLUDING
		INCLUDE
			some page:
			<div class="content" data-page-name="{{ $pageName }}">
				<p>Here's why you should sign up for our app: <strong>It's Great.</strong></p>
				@include('sign-up-button', ['text' => 'See just how great it is'])
			</div>

			sign-up-button.blade.php:
			<a class="button button--callout" data-page-name="{{ $pageName }}">
				<i class="exclamation-icon"></i> {{ $text }}
			</a>
		EACH
			- loops over array or collection and makes an @include for every item
			- parameters:
				- name of the view partial
				- array or collection
				- variable name that each item will be passed to the view as
				- the optional fourth parameter is the view to show if the array or collection is empty (or you can pass a string in here that will be used as your template)
			some page:
			<div class="sidebar">
				@each('partials.module', $modules, 'module', 'partials.empty-module')
			</div>

			partials/module.blade.php:
			<div class="sidebar-module">
				<h1>{{	$module->title	}}</h1>
			</div>

			partials/empty-module.blade.php: 
			<div class="sidebar-module">
				No modules!
			</div>
	EXTENDING
		YIELD
			- first parameter is a name for the section
			- can be extended later
			- if it is not extended a optional default can provided in a second parameter
			- if extended the child section do not have access to the default value
			@yield('title')
			@yield('title', 'Home Page')
		SECTION
			- first parameter is a name for the section
			- can be extended later
			- if it is not extended a optional default block can provided
			- if extended the child section have access to the default value through @parent
			@section('footerScripts')
			    <script	src="app.js"></script>
			@show
		EXTENDS
			- you can extend views and fill the @yield and @section parts with content
			- each file should only extend one other file

			@extends('layouts.master')

			@section('content', 'Welcome!')			--> one line

			@section('content')				--> a block
			    Welcome!
			@endsection

			@section('scripts')				--> append
			    @parent
			    <script src="dashboard.js"></script>
			@endsection
