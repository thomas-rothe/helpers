START USING GRUNT IN A PROJECT
	1. check if you have node installed:
		cd somewhere
		node -v
	2. check if you have npm installed:
		cd somewhere
		npm -v
	3. check if grunt is installed globally:
		cd somewhere
		grunt --version
	4. if it is not: install it globally: (which exports the path to the grunt binary to your $PATH)
		cd somewhere
		sudo npm install -g grunt-cli
	5. got to your project:
		cd projectdirectory
	6. if it's not yet there: create a file "package.json" interactively (for a most basic "package.json" file it is enough to provide a project name)
		npm init
	7. install grunt (to "node_modules") and add it as dependency of your project to "package.json" (file in project root directory):
		npm install grunt
	8. if you need them: install Grunt plugins to your development environment like: (can also be done later)
		npm install grunt-contrib-concat --save-dev
		npm install grunt-contrib-watch --save-dev
		npm install node-sass --save-dev		NODE PACKAGE FOR GRUNT-SASS
		npm install grunt-sass --save-dev		SASS (WITHOUT RUBY INSTALLED)
	9. create a file "Gruntfile.js"
		touch Gruntfile.js
	10. configure Grunt in your "Gruntfile.js"
CHOOSE A FOLDER STRUCTURE LIKE FOR EXAMPLE:
	+ project
	-+ public
	--+ assets
	---+ build
	----+ js
	------ vendor.min.js
	------ application.min.js
	----+ css
	------ vendor.min.css
	------ application.min.css
	-+ node_modules
	--+ anotherLibrary
	--+ grunt
	--+ yetAnotherLibrary
	-- package.json
	-- package-lock.json
	-- Gruntfile.js
CONFIGURE GRUNT IN THE FILE "GRUNTFILE.JS"
	CREATE TASKS
		HELLO WORLD TASK
			- Gruntfile.js:
				module.exports = function(grunt) {
					grunt.registerTask('helloworld', function() {
						console.log('Hello world!');
					});
				}
			- execute it on command line:
				grunt helloworld

		DEEFAULT TASK
			- Gruntfile.js:
				module.exports = function(grunt) {
					grunt.registerTask('default', function() {
						console.log('Hello world!');
					});
				}
			- execute it on command line:
				grunt

		TASK WHICH RUNS OTHER TASKS
			- Gruntfile.js:
				module.exports = function(grunt) {
					grunt.registerTask('hello', function() {
						console.log('Hello!');
					});

					grunt.registerTask('goodbye', function() {
						console.log('Goodbye!');
					});
					
					grunt.registerTask('mybuildtask', ['hello', 'goodbye']);
				}
			- execute it on command line:
				grunt mybuildtask

		TIPP OF THE DAY
			grunt.registerTask('default', ['concat', 'watch']);  // first builds and then waits for changes 
	CONFIGURE PLUGINS (can be found at "gruntjs.com/plugins")
		CONCATENATION: grunt-contrib-concat
			- concatenates multiple files to one single files
			- Gruntfile.js:
				module.exports = function(grunt) {
					// load task
					grunt.loadNpmTasks('grunt-contrib-concat');
					// configure task
					grunt.initConfig({
						concat: {
							myJs: {
								src: ['mypath/myfile1.js', 'mypath/f2.js', 'p4/f3.js'],
								dest: 'path/to/build/dir/myscript.js',
							},
							myCss: {
								src: ['path/file.css', 'path/otherfile.css'],
								dest: 'path/to/build/dir/mystyle.js',
							},
						},
						watch: { ... },
						myplugin: { ... },
					});
				}
			- execute it on command line:
				grunt concat
		WATCHING: grunt-contrib-watch
			- watches for file system changes and if there is one it runs tasks
			- Gruntfile.js:
				module.exports = function(grunt) {
					// load task
					grunt.loadNpmTasks('grunt-contrib-watch');
					// configure task
					grunt.initConfig({
						watch: {
							myJs: {
								files: ['path/**/*.js'], 		// any folder: **
													// any file: *
													// so here: any .js file in the path directory
								tasks: ['concat', 'jshint', 'mytask'],
							},
							myCss: {
								files: ['path/**/*.css'],
								tasks: ['concat', 'mytask'],
							},
						},
					});
				}
			- execute it on command line:
				grunt watch
		SASS: grunt-sass
		LESS:
		MINIFY:
		UGLIFY:
	SYNTAX
		**			all folders	EXAMPLE: 'path/**/file.js'
		*			all files	EXAMPLE: 'path/*.js'
		<%= object.property %>	variable	EXAMPLE:
								grunt.initConfig({
									pkg: grunt.file.readJSON('package.json'),
									...										src: 'src/<%= pkg.name %>.js',
// FULL EXAMPLE OF GRUNTFILE.JS
module.exports = function(grunt) {

    grunt.initConfig({
        concat: {
            js: {
                src: ['js/*.js'],
                dest: 'public/assets/js/application.js',
            },
            css: {
                src: ['css/*.css'],
                dest: 'public/assets/css/application.css',
            },
        }
    });
			
    grunt.loadNpmTasks('grunt-contrib-concat');
}
