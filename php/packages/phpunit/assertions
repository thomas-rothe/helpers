EXAMPLE
    $this->assertTrue(true);    // passes
    $this->assertTrue(false);   // fails
RETURN VALUE
    - generally the return value is jus: void
MESSAGES
    - generally each method can be called with an additional parameter which contains a message to be 
        printed if the test fails (helps for debugging)
        EXAMPLE
            $this->assertTrue($isAdmin, 'Failed to assert that the user is an admin');
LIST

assertTrue(Boolean $condition)                  // fails if $condition is false
assertFalse(Boolean $condition)                 // fails if $condition is true

assertNull(Mixed $variable)                     // fails if $variable is not null
assertNotNull(Mixed $variable)                  // fails if $variable is null

assertSame(Object $expected, Object $actual)    // fails if the two variables do not reference the same object
assertNotSame(Object $expected, Object $actual) // fails if the two variables reference the same object
assertSame(Mixed $expected, Mixed $actual)      // fails if the two variables do not have the same type and value
assertNotSame(Mixed $expected, Mixed $actual)   // fails if the two variables have the same type and value

assertEquals(Array $expected, Array $actual)    // fails if the two arrays are not equal
assertNotEquals(Array $expected, Array $actual) // fails if the two arrays are equal
assertEquals(                                   // fails if the two floats are not within $delta of each other
    Float $expected, 
    Float $actual, 
    Float $delta = 0
)
assertNotEquals(                                // fails if the two floats are within $delta of each other
    Float $expected, 
    Float $actual,
    Float $delta = 0
)
assertEquals(String $expected, String $actual)  // fails if the two strings are not equal
assertNotEquals(String $expected, String $act)  // fails if the two strings are equal
assertEquals(Mixed $expected, Mixed $actual)    // fails if the two variables are not equal
assertNotEquals(Mixed $expected, Mixed $actual) // fails if the two variables are equal

assertContains(Mixed $needle, Array $haystack)  // fails if $needle is not an element of $haystack
assertNotContains(Mixed $needle, Array $haysta) // fails if $needle is an element of $haystack
assertContains(Mixed $needle, Iterator $haysta) // fails if $needle is not an element of $haystack
assertNotContains(Mixed $needle, Iterator $hay) // fails if $needle is an element of $haystack

assertRegExp(String $pattern, String $string)   // fails if $string does not match the regex $pattern
assertNotRegExp(String $pattern, String $strin) // fails if $string matches the regular expression $pattern

assertType(String $expected, Mixed $actual)     // fails if the variable $actual is not of type $expected
assertNotType(String $expected, Mixed $actual)  // fails if the variable $actual is of type $expected

$this->assertArrayHasKey('foo', ['foo' => 'bar']);
$this->assertCount(1, ['foo']);
$this->assertDirectoryIsReadable('/path/to/directory');

......
