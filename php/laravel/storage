CONFIG
    config/filesystems.php
        - here you configure all of your "disks" (with storage driver and storage location)
        - as many as you want and they can use the same driver
DEFAULT DISKS
    public
        - driver: local
        - root directory: storage/app/public
        - with "php artisan storage:link" you can create a symbolic link from "public/storage" to "storage/app/public"
        - you get the URL to a file in this directory with: asset('storage/file.txt')
    local
        - driver: local
        - root directory: storage/app
GET DISK INSTANCE
    STORAGE FACADE
        STATIC METHOD DISK
            Storage::disk('public')
        SHORTCUT FOR DEFAULT DISK
              Storage::put('file.txt', 'foobar')
METHODS OF DISK INSTANCE
    WRITE
        Storage::disk('local')->put('file.txt', $stringOrResource);
        Storage::disk('local')->prepend('file.log', 'Prepended Text');
        Storage::disk('local')->append('file.log', 'Appended Text');
    READ
        $content =    Storage::disk('local')->get('file.jpg');
        $boolean =    Storage::disk('local')->exists('file.jpg');
    COPY
        Storage::copy('old/file1.jpg', 'new/file1.jpg');
    MOVE
        Storage::move('old/file1.jpg', 'new/file1.jpg');
    URL
        $url =        Storage::disk('local')->url('uploads/file1.jpg');         // path to the URL is defined in config/filesystems.php
    METADATA
        $bytes =      Storage::disk('local')->size('file1.jpg');
        $timestamp =  Storage::disk('local')->lastModified('file1.jpg');
    UPLOADS
        $path = Storage::putFile('photos', new File('/path/to/photo'));                 // Automatically generate a unique ID for file name...
        $path = Storage::putFileAs('photos', new File('/path/to/photo'), 'photo.jpg');  // Manually specify a file name...
        $path = $request->file('avatar')->store('avatars');                             // Same as putFile()
        $path = $request->file('avatar')->storeAs(
            'path', $request->user()->id
        );
