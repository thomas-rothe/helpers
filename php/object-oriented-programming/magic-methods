MAGIC METHODS
    are called internally by PHP if they were coded by the programmer and if certain events happen to an instance
        
    __construct()               void __construct ([ mixed $args = "" [, $... ]] )
        
        class Foo
        {
            public function __construct($name)
            {
                // called after a new instance is created
            }
        }
        $foo = new Foo($name);
        
    __destruct()                void __destruct ( void )
        
        class Foo
        {
            public function __destruct()
            {
                // called before an instance is destroyed
            }
        }
        $foo = new Foo();
        exit; // automatically if PHP destroys an object; or to do this manually: unset($foo);
        
    __call()                    public mixed __call ( string $name , array $arguments )
        
        class Foo
        {

        }
        $foo = new Foo();
        $foo->something($arguments); // if an inaccessible method is called on an instance
        
    __callStatic()              public static mixed __callStatic ( string $name , array $arguments )
        
        class Foo
        {

        }
        $foo = new Foo();
        Foo::something($arguments); // if an inaccessible method is called on a class
        
    __get()                     public mixed __get ( string $name )
        
        class Foo
        {

        }
        $foo = new Foo();
        $name = $foo->name; // if an inaccessible property is read
        
    __set()                     public void __set ( string $name , mixed $value )
        
        class Foo
        {

        }
        $foo = new Foo();
        $foo->name = 'bar'; // if writing to an inaccessible property
        
    __isset()                   public bool __isset ( string $name )
        
        class Foo
        {
            protected $name;
            public function __isset($name)
            {
                return isset($this->name);
            }
        }
        $foo = new Foo();
        isset($foo->name); // triggered by calling isset() or empty() on inaccessible properties
        
    __unset()                   public void __unset ( string $name )
        
        class Foo
        {
            protected $name;
            public function __unset($name)
            {
                return unset($this->name);
            }
        }
        $foo = new Foo();
        unset($foo->name); // triggered by calling unset() on inaccessible properties
        
    __sleep()                   public array __sleep ( void )
    __wakeup()                  void __wakeup ( void )
    __toString()                public string __toString ( void )
    __invoke()                  mixed __invoke ([ $... ] )
    __set_state()               static object __set_state ( array $properties )
    __clone()                   void __clone ( void )
    __debugInfo()               array __debugInfo ( void )
