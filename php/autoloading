__autoload() - DEPRECATED AS OF PHP 7.2
    - you can define anywhere a function called: __autoload
    - if a class can not be found it will call (if it exists) your function "__autoload" ()
    - is the last chance to find a class, afterwards PHP will throw an exception
    - __autoload must take exactly one parameter
    - downside of __autoload: can only be defined once
    
    /Foo.php
    <?php class Foo {}

    /Bar.php
    <?php class Bar {}

    /index.php
    function __autoload($classname) {
        include ($classname . '.php');
    }
    $foo = new Foo();
    $bar = new Bar();
spl_autoload_register()
    - allows you to define as many custom autoloading functions as you want
    
    /Foo.php
    <?php class Foo {}

    /bar/Bar.php
    <?php class Bar {}

    /index.php
    function my_autoloader($class) {
        if ($class === 'Bar') {
            return;
        }
        include $class . '.php';
    }

    function my_other_autoloader($class) {
        include 'bar/' . $class . '.php';
    }

    spl_autoload_register('my_autoloader');
    spl_autoload_register('my_other_autoloader');

    $foo = new Foo();
    $bar = new Bar();
    
