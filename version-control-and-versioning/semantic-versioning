QUICK SUMMARY
    1.6.19
        - bug fix -> 1.6.20
        - new feature which is backwards compatible -> 1.7.0
        - everthing which breaks backwards compatibility -> 2.0.0
GENERAL
    semantic versioning (http://semver.org/) is the de facto standard for versioning software releases (not released but internal versions 
    may also include all commits to a version control system)
INCREMENT A VERSION
    the meaning of e.g. 1.6.1 is MAJOR.MINOR.PATCH
        MAJOR version when you make incompatible API changes,
        MINOR version when you add functionality in a backwards-compatible manner, and
        PATCH version when you make backwards-compatible bug fixes.
    Additional labels for pre-release and build metadata are available as extensions to the MAJOR.MINOR.PATCH format.
EXPLANATION
    For this system to work, you first need to declare a public API. This may consist of documentation or be enforced 
    by the code itself. Regardless, it is important that this API be clear and precise. Once you identify your public 
    API, you communicate changes to it with specific increments to your version number. Consider a version format of 
    X.Y.Z (Major.Minor.Patch). Bug fixes not affecting the API increment the patch version, backwards compatible API 
    additions/changes increment the minor version, and backwards incompatible API changes increment the major version.
